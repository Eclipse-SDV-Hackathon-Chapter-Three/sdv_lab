apiVersion: v0.1
workloads:
  mqtt_broker:
    runtime: podman
    agent: agent_A
    restartPolicy: NEVER
    configs:
      mqtt_conf: mqtt_config
    files:
      - mountPoint: /mosquitto/config/mosquitto.conf
        data: "{{mqtt_conf}}"
    runtimeConfig: |
      image: docker.io/library/eclipse-mosquitto:latest
      commandOptions: ["-p", "1883:1883", "-u", "mosquitto", "-v", "mosquitto_data:/mosquitto/data"]
  ustreamer:
    runtime: podman
    agent: agent_A
    restartPolicy: NEVER
    dependencies:
      mqtt_broker: ADD_COND_RUNNING
    configs:
      ustreamer_config: ustreamer_config
    files:
      - mountPoint: /app/config/CONFIG.json5
        data: "{{ustreamer_config.config}}"
      - mountPoint: /app/config/MQTT_CONFIG.json5
        data: "{{ustreamer_config.mqtt_config}}"
      - mountPoint: /app/config/ZENOH_CONFIG.json5
        data: "{{ustreamer_config.zenoh_config}}"
      - mountPoint: /app/config/subscription_data.json
        data: "{{ustreamer_config.subscription_data}}"
    runtimeConfig: |
      image: ghcr.io/eclipse-uprotocol/up-streamer-rust/configurable-streamer:main
      commandOptions: ["--network", "host", "-e", "RUST_LOG=debug,zenoh=debug"]
  ego_vehicle:
    runtime: podman
    agent: agent_A
    restartPolicy: NEVER
    runtimeConfig: |
      image: localhost/sdv-dev:latest
      commandOptions: ["-e", "RUST_LOG=debug", "--network=host"]
configs:
  mqtt_config: |
    allow_anonymous true
    listener 1883 0.0.0.0
    persistence true
    persistence_location /mosquitto/data/
  ustreamer_config:
    config: |
      {
        up_streamer_config: {
          // The message queue size of each route between endpoints within the UStreamer
          // Lower numbers mean that some messages will be dropped
          message_queue_size: 10000
        },
        streamer_uuri: {
          // Determines the authority_name of the host device
          // Used when initializing host transport
          authority: "streamer",
          // Determines the ue_id of the streamer
          // Used when initializing host transport
          ue_id: 78,
          // Determines the ue_version_major of the streamer
          // Used when initializing host transport
          ue_version_major: 1
        },
        usubscription_config: {
          // Lists the path to the subscription file when using static file
          file_path: "config/subscription_data.json"
        },
        transports: {
          zenoh: {
            // Path to the zenoh config file
            config_file: "config/ZENOH_CONFIG.json5",
            // List of endpoints that use the zenoh transport
            endpoints: [
              {
                authority: "EGOVehicle",
                // Make sure that each endpoint has a unique identifier or the streamer will not start
                endpoint: "egovehicle_endpoint",
                // All endpoint identifiers listed here must also be defined in this config
                forwarding: [
                    "aaos_endpoint"
                ]
              },
              {
                authority: "CruiseControl",
                // Make sure that each endpoint has a unique identifier or the streamer will not start
                endpoint: "cruisecontrol_endpoint",
                // All endpoint identifiers listed here must also be defined in this config
                forwarding: [
                ]
              },
            ]
          },
          mqtt: {
            // Same as for the zenoh section but for all MQTT5 based endpoints
            config_file: "config/MQTT_CONFIG.json5",
            endpoints: [
              {
                authority: "AAOS",
                endpoint: "aaos_endpoint",
                forwarding: [
                    "cruisecontrol_endpoint",
                    "egovehicle_endpoint",
                ]
              },
              {
                authority: "Threadx",
                endpoint: "threadx_endpoint",
                forwarding: [
                    "cruisecontrol_endpoint",
                    "egovehicle_endpoint",
                ]
              },
            ]
          }
        }
      },
    mqtt_config: |
      {
        hostname: "5.196.78.28",
        port: 1883,
        max_buffered_messages: 100,
        max_subscriptions: 100,
        session_expiry_interval: 3600,
        username: "user"
      }
    zenoh_config: |
      {
        mode: "router",
        connect: {
          endpoints: ["tcp/0.0.0.0:7447"],
        },
        scouting: {
          multicast: {
            enabled: false,
          },
            gossip: {
              enabled: true,
            },
          },
        routing: {
          router: {
            peers_failover_brokering: true,
          },
          peer: {
            mode: "peer_to_peer",
          },
        },
      }
    subscription_data: |
      {
        "//AAOS/0/2/8001": [
          "//CruiseControl/5678/1/1234",
          "//EGOVehicle/5678/2/1234"
        ],
        "//EGOVehicle/0/2/8001": ["//AAOS/0/1/1"],
        "//Threadx/0/2/8001": [
          "//EGOVehicle/5678/1/1234",
          "//CruiseControl/5678/1/1234"
        ]
      }
